/**
 * ProcessMaker API
 * This ProcessMaker I/O API provides access to a BPMN 2.0 compliant workflow engine api that is designed to be used as a microservice to support enterprise cloud applications.  The current Alpha 1.0 version supports most of the descriptive class of the BPMN 2.0 specification.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@processmaker.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BpmnFile', 'model/BpmnFileAttributes', 'model/BpmnImportItem', 'model/Client', 'model/ClientAttributes', 'model/ClientCollection', 'model/ClientCreateItem', 'model/ClientItem', 'model/ClientUpdateItem', 'model/DataModel', 'model/DataModelAttributes', 'model/DataModelItem', 'model/DataModelItem1', 'model/DataModelItemAttributes', 'model/DateTime', 'model/Error', 'model/ErrorArray', 'model/Event', 'model/EventAttributes', 'model/EventCollection', 'model/EventConnector', 'model/EventConnector1', 'model/EventConnectorAttributes', 'model/EventConnectorCreateItem', 'model/EventConnectorUpdateItem', 'model/EventConnectorsCollection', 'model/EventCreateItem', 'model/EventItem', 'model/EventUpdateItem', 'model/Flow', 'model/FlowAttributes', 'model/FlowCollection', 'model/FlowCreateItem', 'model/FlowItem', 'model/FlowUpdateItem', 'model/Gateway', 'model/GatewayAttributes', 'model/GatewayCollection', 'model/GatewayCreateItem', 'model/GatewayItem', 'model/GatewayUpdateItem', 'model/Group', 'model/GroupAddUsersItem', 'model/GroupAttributes', 'model/GroupCollection', 'model/GroupCreateItem', 'model/GroupIds', 'model/GroupItem', 'model/GroupRemoveUsersItem', 'model/GroupSyncUsersItem', 'model/GroupUpdateItem', 'model/InlineResponse200', 'model/InputOutput', 'model/InputOutputAttributes', 'model/InputOutputCollection', 'model/InputOutputCreateItem', 'model/InputOutputItem', 'model/InputOutputUpdateItem', 'model/Instance', 'model/InstanceAttributes', 'model/InstanceCollection', 'model/InstanceCreateItem', 'model/InstanceItem', 'model/InstanceUpdateItem', 'model/Meta', 'model/MetaLog', 'model/Pagination', 'model/PaginationLinks', 'model/Process', 'model/ProcessAttributes', 'model/ProcessCollection', 'model/ProcessCollection1', 'model/ProcessCreateItem', 'model/ProcessItem', 'model/ProcessUpdateItem', 'model/ResultSuccess', 'model/ResultSuccessMeta', 'model/Task', 'model/TaskAddGroupsItem', 'model/TaskAttributes', 'model/TaskCollection', 'model/TaskConnector', 'model/TaskConnector1', 'model/TaskConnectorAttributes', 'model/TaskConnectorCreateItem', 'model/TaskConnectorUpdateItem', 'model/TaskConnectorsCollection', 'model/TaskCreateItem', 'model/TaskInstance', 'model/TaskInstanceAttributes', 'model/TaskInstanceCollection', 'model/TaskInstanceUpdateItem', 'model/TaskItem', 'model/TaskRemoveGroupsItem', 'model/TaskSyncGroupsItem', 'model/TaskUpdateItem', 'model/TriggerEventCreateItem', 'model/User', 'model/UserAttributes', 'model/UserCollection', 'model/UserCreateItem', 'model/UserIds', 'model/UserItem', 'model/UserUpdateItem', 'api/ProcessmakerApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/BpmnFile'), require('./model/BpmnFileAttributes'), require('./model/BpmnImportItem'), require('./model/Client'), require('./model/ClientAttributes'), require('./model/ClientCollection'), require('./model/ClientCreateItem'), require('./model/ClientItem'), require('./model/ClientUpdateItem'), require('./model/DataModel'), require('./model/DataModelAttributes'), require('./model/DataModelItem'), require('./model/DataModelItem1'), require('./model/DataModelItemAttributes'), require('./model/DateTime'), require('./model/Error'), require('./model/ErrorArray'), require('./model/Event'), require('./model/EventAttributes'), require('./model/EventCollection'), require('./model/EventConnector'), require('./model/EventConnector1'), require('./model/EventConnectorAttributes'), require('./model/EventConnectorCreateItem'), require('./model/EventConnectorUpdateItem'), require('./model/EventConnectorsCollection'), require('./model/EventCreateItem'), require('./model/EventItem'), require('./model/EventUpdateItem'), require('./model/Flow'), require('./model/FlowAttributes'), require('./model/FlowCollection'), require('./model/FlowCreateItem'), require('./model/FlowItem'), require('./model/FlowUpdateItem'), require('./model/Gateway'), require('./model/GatewayAttributes'), require('./model/GatewayCollection'), require('./model/GatewayCreateItem'), require('./model/GatewayItem'), require('./model/GatewayUpdateItem'), require('./model/Group'), require('./model/GroupAddUsersItem'), require('./model/GroupAttributes'), require('./model/GroupCollection'), require('./model/GroupCreateItem'), require('./model/GroupIds'), require('./model/GroupItem'), require('./model/GroupRemoveUsersItem'), require('./model/GroupSyncUsersItem'), require('./model/GroupUpdateItem'), require('./model/InlineResponse200'), require('./model/InputOutput'), require('./model/InputOutputAttributes'), require('./model/InputOutputCollection'), require('./model/InputOutputCreateItem'), require('./model/InputOutputItem'), require('./model/InputOutputUpdateItem'), require('./model/Instance'), require('./model/InstanceAttributes'), require('./model/InstanceCollection'), require('./model/InstanceCreateItem'), require('./model/InstanceItem'), require('./model/InstanceUpdateItem'), require('./model/Meta'), require('./model/MetaLog'), require('./model/Pagination'), require('./model/PaginationLinks'), require('./model/Process'), require('./model/ProcessAttributes'), require('./model/ProcessCollection'), require('./model/ProcessCollection1'), require('./model/ProcessCreateItem'), require('./model/ProcessItem'), require('./model/ProcessUpdateItem'), require('./model/ResultSuccess'), require('./model/ResultSuccessMeta'), require('./model/Task'), require('./model/TaskAddGroupsItem'), require('./model/TaskAttributes'), require('./model/TaskCollection'), require('./model/TaskConnector'), require('./model/TaskConnector1'), require('./model/TaskConnectorAttributes'), require('./model/TaskConnectorCreateItem'), require('./model/TaskConnectorUpdateItem'), require('./model/TaskConnectorsCollection'), require('./model/TaskCreateItem'), require('./model/TaskInstance'), require('./model/TaskInstanceAttributes'), require('./model/TaskInstanceCollection'), require('./model/TaskInstanceUpdateItem'), require('./model/TaskItem'), require('./model/TaskRemoveGroupsItem'), require('./model/TaskSyncGroupsItem'), require('./model/TaskUpdateItem'), require('./model/TriggerEventCreateItem'), require('./model/User'), require('./model/UserAttributes'), require('./model/UserCollection'), require('./model/UserCreateItem'), require('./model/UserIds'), require('./model/UserItem'), require('./model/UserUpdateItem'), require('./api/ProcessmakerApi'));
  }
}(function(ApiClient, BpmnFile, BpmnFileAttributes, BpmnImportItem, Client, ClientAttributes, ClientCollection, ClientCreateItem, ClientItem, ClientUpdateItem, DataModel, DataModelAttributes, DataModelItem, DataModelItem1, DataModelItemAttributes, DateTime, Error, ErrorArray, Event, EventAttributes, EventCollection, EventConnector, EventConnector1, EventConnectorAttributes, EventConnectorCreateItem, EventConnectorUpdateItem, EventConnectorsCollection, EventCreateItem, EventItem, EventUpdateItem, Flow, FlowAttributes, FlowCollection, FlowCreateItem, FlowItem, FlowUpdateItem, Gateway, GatewayAttributes, GatewayCollection, GatewayCreateItem, GatewayItem, GatewayUpdateItem, Group, GroupAddUsersItem, GroupAttributes, GroupCollection, GroupCreateItem, GroupIds, GroupItem, GroupRemoveUsersItem, GroupSyncUsersItem, GroupUpdateItem, InlineResponse200, InputOutput, InputOutputAttributes, InputOutputCollection, InputOutputCreateItem, InputOutputItem, InputOutputUpdateItem, Instance, InstanceAttributes, InstanceCollection, InstanceCreateItem, InstanceItem, InstanceUpdateItem, Meta, MetaLog, Pagination, PaginationLinks, Process, ProcessAttributes, ProcessCollection, ProcessCollection1, ProcessCreateItem, ProcessItem, ProcessUpdateItem, ResultSuccess, ResultSuccessMeta, Task, TaskAddGroupsItem, TaskAttributes, TaskCollection, TaskConnector, TaskConnector1, TaskConnectorAttributes, TaskConnectorCreateItem, TaskConnectorUpdateItem, TaskConnectorsCollection, TaskCreateItem, TaskInstance, TaskInstanceAttributes, TaskInstanceCollection, TaskInstanceUpdateItem, TaskItem, TaskRemoveGroupsItem, TaskSyncGroupsItem, TaskUpdateItem, TriggerEventCreateItem, User, UserAttributes, UserCollection, UserCreateItem, UserIds, UserItem, UserUpdateItem, ProcessmakerApi) {
  'use strict';

  /**
   * This_ProcessMaker_IO_API_provides_access_to_a_BPMN_2_0_compliant_workflow_engine_api_that_is_designed_to_be_used_as_a_microservice_to_support_enterprise_cloud_applications_The_current_Alpha_1_0_version_supports_most_of_the_descriptive_class_of_the_BPMN_2_0_specification_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ProcessMakerApi = require('index'); // See note below*.
   * var xxxSvc = new ProcessMakerApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ProcessMakerApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ProcessMakerApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ProcessMakerApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The BpmnFile model constructor.
     * @property {module:model/BpmnFile}
     */
    BpmnFile: BpmnFile,
    /**
     * The BpmnFileAttributes model constructor.
     * @property {module:model/BpmnFileAttributes}
     */
    BpmnFileAttributes: BpmnFileAttributes,
    /**
     * The BpmnImportItem model constructor.
     * @property {module:model/BpmnImportItem}
     */
    BpmnImportItem: BpmnImportItem,
    /**
     * The Client model constructor.
     * @property {module:model/Client}
     */
    Client: Client,
    /**
     * The ClientAttributes model constructor.
     * @property {module:model/ClientAttributes}
     */
    ClientAttributes: ClientAttributes,
    /**
     * The ClientCollection model constructor.
     * @property {module:model/ClientCollection}
     */
    ClientCollection: ClientCollection,
    /**
     * The ClientCreateItem model constructor.
     * @property {module:model/ClientCreateItem}
     */
    ClientCreateItem: ClientCreateItem,
    /**
     * The ClientItem model constructor.
     * @property {module:model/ClientItem}
     */
    ClientItem: ClientItem,
    /**
     * The ClientUpdateItem model constructor.
     * @property {module:model/ClientUpdateItem}
     */
    ClientUpdateItem: ClientUpdateItem,
    /**
     * The DataModel model constructor.
     * @property {module:model/DataModel}
     */
    DataModel: DataModel,
    /**
     * The DataModelAttributes model constructor.
     * @property {module:model/DataModelAttributes}
     */
    DataModelAttributes: DataModelAttributes,
    /**
     * The DataModelItem model constructor.
     * @property {module:model/DataModelItem}
     */
    DataModelItem: DataModelItem,
    /**
     * The DataModelItem1 model constructor.
     * @property {module:model/DataModelItem1}
     */
    DataModelItem1: DataModelItem1,
    /**
     * The DataModelItemAttributes model constructor.
     * @property {module:model/DataModelItemAttributes}
     */
    DataModelItemAttributes: DataModelItemAttributes,
    /**
     * The DateTime model constructor.
     * @property {module:model/DateTime}
     */
    DateTime: DateTime,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ErrorArray model constructor.
     * @property {module:model/ErrorArray}
     */
    ErrorArray: ErrorArray,
    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event: Event,
    /**
     * The EventAttributes model constructor.
     * @property {module:model/EventAttributes}
     */
    EventAttributes: EventAttributes,
    /**
     * The EventCollection model constructor.
     * @property {module:model/EventCollection}
     */
    EventCollection: EventCollection,
    /**
     * The EventConnector model constructor.
     * @property {module:model/EventConnector}
     */
    EventConnector: EventConnector,
    /**
     * The EventConnector1 model constructor.
     * @property {module:model/EventConnector1}
     */
    EventConnector1: EventConnector1,
    /**
     * The EventConnectorAttributes model constructor.
     * @property {module:model/EventConnectorAttributes}
     */
    EventConnectorAttributes: EventConnectorAttributes,
    /**
     * The EventConnectorCreateItem model constructor.
     * @property {module:model/EventConnectorCreateItem}
     */
    EventConnectorCreateItem: EventConnectorCreateItem,
    /**
     * The EventConnectorUpdateItem model constructor.
     * @property {module:model/EventConnectorUpdateItem}
     */
    EventConnectorUpdateItem: EventConnectorUpdateItem,
    /**
     * The EventConnectorsCollection model constructor.
     * @property {module:model/EventConnectorsCollection}
     */
    EventConnectorsCollection: EventConnectorsCollection,
    /**
     * The EventCreateItem model constructor.
     * @property {module:model/EventCreateItem}
     */
    EventCreateItem: EventCreateItem,
    /**
     * The EventItem model constructor.
     * @property {module:model/EventItem}
     */
    EventItem: EventItem,
    /**
     * The EventUpdateItem model constructor.
     * @property {module:model/EventUpdateItem}
     */
    EventUpdateItem: EventUpdateItem,
    /**
     * The Flow model constructor.
     * @property {module:model/Flow}
     */
    Flow: Flow,
    /**
     * The FlowAttributes model constructor.
     * @property {module:model/FlowAttributes}
     */
    FlowAttributes: FlowAttributes,
    /**
     * The FlowCollection model constructor.
     * @property {module:model/FlowCollection}
     */
    FlowCollection: FlowCollection,
    /**
     * The FlowCreateItem model constructor.
     * @property {module:model/FlowCreateItem}
     */
    FlowCreateItem: FlowCreateItem,
    /**
     * The FlowItem model constructor.
     * @property {module:model/FlowItem}
     */
    FlowItem: FlowItem,
    /**
     * The FlowUpdateItem model constructor.
     * @property {module:model/FlowUpdateItem}
     */
    FlowUpdateItem: FlowUpdateItem,
    /**
     * The Gateway model constructor.
     * @property {module:model/Gateway}
     */
    Gateway: Gateway,
    /**
     * The GatewayAttributes model constructor.
     * @property {module:model/GatewayAttributes}
     */
    GatewayAttributes: GatewayAttributes,
    /**
     * The GatewayCollection model constructor.
     * @property {module:model/GatewayCollection}
     */
    GatewayCollection: GatewayCollection,
    /**
     * The GatewayCreateItem model constructor.
     * @property {module:model/GatewayCreateItem}
     */
    GatewayCreateItem: GatewayCreateItem,
    /**
     * The GatewayItem model constructor.
     * @property {module:model/GatewayItem}
     */
    GatewayItem: GatewayItem,
    /**
     * The GatewayUpdateItem model constructor.
     * @property {module:model/GatewayUpdateItem}
     */
    GatewayUpdateItem: GatewayUpdateItem,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupAddUsersItem model constructor.
     * @property {module:model/GroupAddUsersItem}
     */
    GroupAddUsersItem: GroupAddUsersItem,
    /**
     * The GroupAttributes model constructor.
     * @property {module:model/GroupAttributes}
     */
    GroupAttributes: GroupAttributes,
    /**
     * The GroupCollection model constructor.
     * @property {module:model/GroupCollection}
     */
    GroupCollection: GroupCollection,
    /**
     * The GroupCreateItem model constructor.
     * @property {module:model/GroupCreateItem}
     */
    GroupCreateItem: GroupCreateItem,
    /**
     * The GroupIds model constructor.
     * @property {module:model/GroupIds}
     */
    GroupIds: GroupIds,
    /**
     * The GroupItem model constructor.
     * @property {module:model/GroupItem}
     */
    GroupItem: GroupItem,
    /**
     * The GroupRemoveUsersItem model constructor.
     * @property {module:model/GroupRemoveUsersItem}
     */
    GroupRemoveUsersItem: GroupRemoveUsersItem,
    /**
     * The GroupSyncUsersItem model constructor.
     * @property {module:model/GroupSyncUsersItem}
     */
    GroupSyncUsersItem: GroupSyncUsersItem,
    /**
     * The GroupUpdateItem model constructor.
     * @property {module:model/GroupUpdateItem}
     */
    GroupUpdateItem: GroupUpdateItem,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InputOutput model constructor.
     * @property {module:model/InputOutput}
     */
    InputOutput: InputOutput,
    /**
     * The InputOutputAttributes model constructor.
     * @property {module:model/InputOutputAttributes}
     */
    InputOutputAttributes: InputOutputAttributes,
    /**
     * The InputOutputCollection model constructor.
     * @property {module:model/InputOutputCollection}
     */
    InputOutputCollection: InputOutputCollection,
    /**
     * The InputOutputCreateItem model constructor.
     * @property {module:model/InputOutputCreateItem}
     */
    InputOutputCreateItem: InputOutputCreateItem,
    /**
     * The InputOutputItem model constructor.
     * @property {module:model/InputOutputItem}
     */
    InputOutputItem: InputOutputItem,
    /**
     * The InputOutputUpdateItem model constructor.
     * @property {module:model/InputOutputUpdateItem}
     */
    InputOutputUpdateItem: InputOutputUpdateItem,
    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance: Instance,
    /**
     * The InstanceAttributes model constructor.
     * @property {module:model/InstanceAttributes}
     */
    InstanceAttributes: InstanceAttributes,
    /**
     * The InstanceCollection model constructor.
     * @property {module:model/InstanceCollection}
     */
    InstanceCollection: InstanceCollection,
    /**
     * The InstanceCreateItem model constructor.
     * @property {module:model/InstanceCreateItem}
     */
    InstanceCreateItem: InstanceCreateItem,
    /**
     * The InstanceItem model constructor.
     * @property {module:model/InstanceItem}
     */
    InstanceItem: InstanceItem,
    /**
     * The InstanceUpdateItem model constructor.
     * @property {module:model/InstanceUpdateItem}
     */
    InstanceUpdateItem: InstanceUpdateItem,
    /**
     * The Meta model constructor.
     * @property {module:model/Meta}
     */
    Meta: Meta,
    /**
     * The MetaLog model constructor.
     * @property {module:model/MetaLog}
     */
    MetaLog: MetaLog,
    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The PaginationLinks model constructor.
     * @property {module:model/PaginationLinks}
     */
    PaginationLinks: PaginationLinks,
    /**
     * The Process model constructor.
     * @property {module:model/Process}
     */
    Process: Process,
    /**
     * The ProcessAttributes model constructor.
     * @property {module:model/ProcessAttributes}
     */
    ProcessAttributes: ProcessAttributes,
    /**
     * The ProcessCollection model constructor.
     * @property {module:model/ProcessCollection}
     */
    ProcessCollection: ProcessCollection,
    /**
     * The ProcessCollection1 model constructor.
     * @property {module:model/ProcessCollection1}
     */
    ProcessCollection1: ProcessCollection1,
    /**
     * The ProcessCreateItem model constructor.
     * @property {module:model/ProcessCreateItem}
     */
    ProcessCreateItem: ProcessCreateItem,
    /**
     * The ProcessItem model constructor.
     * @property {module:model/ProcessItem}
     */
    ProcessItem: ProcessItem,
    /**
     * The ProcessUpdateItem model constructor.
     * @property {module:model/ProcessUpdateItem}
     */
    ProcessUpdateItem: ProcessUpdateItem,
    /**
     * The ResultSuccess model constructor.
     * @property {module:model/ResultSuccess}
     */
    ResultSuccess: ResultSuccess,
    /**
     * The ResultSuccessMeta model constructor.
     * @property {module:model/ResultSuccessMeta}
     */
    ResultSuccessMeta: ResultSuccessMeta,
    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task: Task,
    /**
     * The TaskAddGroupsItem model constructor.
     * @property {module:model/TaskAddGroupsItem}
     */
    TaskAddGroupsItem: TaskAddGroupsItem,
    /**
     * The TaskAttributes model constructor.
     * @property {module:model/TaskAttributes}
     */
    TaskAttributes: TaskAttributes,
    /**
     * The TaskCollection model constructor.
     * @property {module:model/TaskCollection}
     */
    TaskCollection: TaskCollection,
    /**
     * The TaskConnector model constructor.
     * @property {module:model/TaskConnector}
     */
    TaskConnector: TaskConnector,
    /**
     * The TaskConnector1 model constructor.
     * @property {module:model/TaskConnector1}
     */
    TaskConnector1: TaskConnector1,
    /**
     * The TaskConnectorAttributes model constructor.
     * @property {module:model/TaskConnectorAttributes}
     */
    TaskConnectorAttributes: TaskConnectorAttributes,
    /**
     * The TaskConnectorCreateItem model constructor.
     * @property {module:model/TaskConnectorCreateItem}
     */
    TaskConnectorCreateItem: TaskConnectorCreateItem,
    /**
     * The TaskConnectorUpdateItem model constructor.
     * @property {module:model/TaskConnectorUpdateItem}
     */
    TaskConnectorUpdateItem: TaskConnectorUpdateItem,
    /**
     * The TaskConnectorsCollection model constructor.
     * @property {module:model/TaskConnectorsCollection}
     */
    TaskConnectorsCollection: TaskConnectorsCollection,
    /**
     * The TaskCreateItem model constructor.
     * @property {module:model/TaskCreateItem}
     */
    TaskCreateItem: TaskCreateItem,
    /**
     * The TaskInstance model constructor.
     * @property {module:model/TaskInstance}
     */
    TaskInstance: TaskInstance,
    /**
     * The TaskInstanceAttributes model constructor.
     * @property {module:model/TaskInstanceAttributes}
     */
    TaskInstanceAttributes: TaskInstanceAttributes,
    /**
     * The TaskInstanceCollection model constructor.
     * @property {module:model/TaskInstanceCollection}
     */
    TaskInstanceCollection: TaskInstanceCollection,
    /**
     * The TaskInstanceUpdateItem model constructor.
     * @property {module:model/TaskInstanceUpdateItem}
     */
    TaskInstanceUpdateItem: TaskInstanceUpdateItem,
    /**
     * The TaskItem model constructor.
     * @property {module:model/TaskItem}
     */
    TaskItem: TaskItem,
    /**
     * The TaskRemoveGroupsItem model constructor.
     * @property {module:model/TaskRemoveGroupsItem}
     */
    TaskRemoveGroupsItem: TaskRemoveGroupsItem,
    /**
     * The TaskSyncGroupsItem model constructor.
     * @property {module:model/TaskSyncGroupsItem}
     */
    TaskSyncGroupsItem: TaskSyncGroupsItem,
    /**
     * The TaskUpdateItem model constructor.
     * @property {module:model/TaskUpdateItem}
     */
    TaskUpdateItem: TaskUpdateItem,
    /**
     * The TriggerEventCreateItem model constructor.
     * @property {module:model/TriggerEventCreateItem}
     */
    TriggerEventCreateItem: TriggerEventCreateItem,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserAttributes model constructor.
     * @property {module:model/UserAttributes}
     */
    UserAttributes: UserAttributes,
    /**
     * The UserCollection model constructor.
     * @property {module:model/UserCollection}
     */
    UserCollection: UserCollection,
    /**
     * The UserCreateItem model constructor.
     * @property {module:model/UserCreateItem}
     */
    UserCreateItem: UserCreateItem,
    /**
     * The UserIds model constructor.
     * @property {module:model/UserIds}
     */
    UserIds: UserIds,
    /**
     * The UserItem model constructor.
     * @property {module:model/UserItem}
     */
    UserItem: UserItem,
    /**
     * The UserUpdateItem model constructor.
     * @property {module:model/UserUpdateItem}
     */
    UserUpdateItem: UserUpdateItem,
    /**
     * The ProcessmakerApi service constructor.
     * @property {module:api/ProcessmakerApi}
     */
    ProcessmakerApi: ProcessmakerApi
  };

  return exports;
}));
